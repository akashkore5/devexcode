{
    "topics": [
      {
        "id": "db-intro-001",
        "title": "Introduction to Databases",
        "slug": "introduction-to-databases",
        "description": "Discover the fundamentals of databases, their role in applications, and how they efficiently store, manage, and retrieve data.",
        "difficulty": "Beginner",
        "tags": ["database", "beginner", "fundamentals", "data-management"],
        "related_questions": [
          "What is the primary purpose of a database in an application?",
          "How does a database differ from a spreadsheet?",
          "What are some common use cases for databases in modern software?",
          "Why is data organization important in databases?"
        ],
        "subtopics": [
          {
            "id": "db-intro-001-01",
            "title": "What is a Database?",
            "slug": "what-is-a-database",
            "description": "Learn the definition of a database and its role in organizing structured and unstructured data for applications.",
            "difficulty": "Beginner",
            "tags": ["database", "beginner", "data-storage"],
            "related_questions": [
              "What defines a database compared to other storage systems?",
              "What types of data can a database store?",
              "Why are databases essential for web applications?"
            ]
          },
          {
            "id": "db-intro-001-02",
            "title": "Database vs. File Systems",
            "slug": "database-vs-file-systems",
            "description": "Compare databases with traditional file systems to understand their advantages in data management and querying.",
            "difficulty": "Beginner",
            "tags": ["database", "beginner", "file-systems", "data-management"],
            "related_questions": [
              "What are the limitations of file systems for data storage?",
              "How do databases improve data retrieval over file systems?",
              "When might a file system be preferred over a database?"
            ]
          },
          {
            "id": "db-intro-001-03",
            "title": "Types of Databases",
            "slug": "types-of-databases",
            "description": "Explore various database types, including relational, NoSQL, in-memory, graph, and time-series databases.",
            "difficulty": "Beginner",
            "tags": ["database", "beginner", "sql", "nosql", "graph", "time-series"],
            "related_questions": [
              "What is the difference between SQL and NoSQL databases?",
              "When would you use a graph database over a relational one?",
              "What are the benefits of in-memory databases?"
            ]
          },
          {
            "id": "db-intro-001-04",
            "title": "Database Management Systems (DBMS)",
            "slug": "database-management-systems",
            "description": "Understand the role of DBMS software in managing databases, including examples like MySQL and MongoDB.",
            "difficulty": "Beginner",
            "tags": ["database", "beginner", "dbms", "mysql", "mongodb"],
            "related_questions": [
              "What functions does a DBMS perform?",
              "How does a DBMS ensure data integrity?",
              "What are some popular DBMS tools?"
            ]
          },
          {
            "id": "db-intro-001-05",
            "title": "Key Database Terminology",
            "slug": "key-database-terminology",
            "description": "Master essential database terms such as tables, records, queries, schemas, and indexes.",
            "difficulty": "Beginner",
            "tags": ["database", "beginner", "terminology"],
            "related_questions": [
              "What is the difference between a table and a schema?",
              "What does a database query do?",
              "How does an index improve database performance?"
            ]
          },
          {
            "id": "db-intro-001-06",
            "title": "Database Use Cases",
            "slug": "database-use-cases",
            "description": "Learn how databases power applications in industries like e-commerce, healthcare, and social media.",
            "difficulty": "Beginner",
            "tags": ["database", "beginner", "use-cases"],
            "related_questions": [
              "How do e-commerce platforms use databases?",
              "What role do databases play in healthcare systems?",
              "Why are databases critical for social media apps?"
            ]
          }
        ]
      },
      {
        "id": "db-relational-002",
        "title": "Relational Databases",
        "slug": "relational-databases",
        "description": "Learn the structure and power of relational databases, using SQL to manage data in table-based systems like MySQL and PostgreSQL.",
        "difficulty": "Beginner",
        "tags": ["database", "sql", "relational", "mysql", "postgresql", "oracle"],
        "related_questions": [
          "What makes a database relational?",
          "How does SQL interact with relational databases?",
          "What are the benefits of using relational databases for structured data?",
          "When should you avoid relational databases?"
        ],
        "subtopics": [
          {
            "id": "db-relational-002-01",
            "title": "Introduction to Relational Databases",
            "slug": "introduction-to-relational-databases",
            "description": "Understand the relational model, tables, and how data is linked using keys.",
            "difficulty": "Beginner",
            "tags": ["database", "sql", "relational"],
            "related_questions": [
              "What is the relational model?",
              "How do primary keys work in relational databases?",
              "What is a foreign key?"
            ]
          },
          {
            "id": "db-relational-002-02",
            "title": "SQL Basics",
            "slug": "sql-basics",
            "description": "Master SQL syntax for creating tables, inserting data, and querying relational databases.",
            "difficulty": "Beginner",
            "tags": ["database", "sql", "beginner"],
            "related_questions": [
              "What is the purpose of the SELECT statement?",
              "How do you insert data into a table using SQL?",
              "What does the WHERE clause do in a query?"
            ]
          },
          {
            "id": "db-relational-002-03",
            "title": "Normalization",
            "slug": "normalization",
            "description": "Learn normalization techniques to eliminate redundancy and ensure data integrity.",
            "difficulty": "Intermediate",
            "tags": ["database", "sql", "normalization"],
            "related_questions": [
              "What is the purpose of normalization?",
              "What are the first three normal forms?",
              "How does normalization impact database performance?"
            ]
          },
          {
            "id": "db-relational-002-04",
            "title": "Joins and Relationships",
            "slug": "joins-and-relationships",
            "description": "Use SQL joins (INNER, LEFT, RIGHT) to combine data from multiple tables.",
            "difficulty": "Intermediate",
            "tags": ["database", "sql", "joins"],
            "related_questions": [
              "What is the difference between INNER JOIN and LEFT JOIN?",
              "How do you handle many-to-many relationships?",
              "When should you use a FULL OUTER JOIN?"
            ]
          },
          {
            "id": "db-relational-002-05",
            "title": "Advanced SQL Queries",
            "slug": "advanced-sql-queries",
            "description": "Write complex queries using subqueries, CTEs, and window functions for analytics.",
            "difficulty": "Advanced",
            "tags": ["database", "sql", "advanced"],
            "related_questions": [
              "What is a Common Table Expression (CTE)?",
              "How do window functions work in SQL?",
              "When should you use a subquery vs. a CTE?"
            ]
          },
          {
            "id": "db-relational-002-06",
            "title": "MySQL vs. PostgreSQL",
            "slug": "mysql-vs-postgresql",
            "description": "Compare MySQL and PostgreSQL features, performance, and use cases.",
            "difficulty": "Intermediate",
            "tags": ["database", "sql", "mysql", "postgresql"],
            "related_questions": [
              "What are the key differences between MySQL and PostgreSQL?",
              "When should you choose PostgreSQL over MySQL?",
              "How does MySQLâ€™s storage engine affect performance?"
            ]
          },
          {
            "id": "db-relational-002-07",
            "title": "ACID Transactions",
            "slug": "acid-transactions",
            "description": "Understand ACID properties for reliable database transactions.",
            "difficulty": "Intermediate",
            "tags": ["database", "sql", "acid"],
            "related_questions": [
              "What does ACID stand for in databases?",
              "How does atomicity ensure transaction reliability?",
              "What is the role of isolation in transactions?"
            ]
          }
        ]
      },
      {
        "id": "db-nosql-003",
        "title": "NoSQL Databases",
        "slug": "nosql-databases",
        "description": "Explore NoSQL databases for flexible, scalable storage of unstructured and semi-structured data in modern applications.",
        "difficulty": "Intermediate",
        "tags": ["database", "nosql", "mongodb", "cassandra", "dynamodb"],
        "related_questions": [
          "What are the main advantages of NoSQL databases?",
          "How do NoSQL databases handle scalability?",
          "What types of data are best suited for NoSQL?",
          "When should you choose NoSQL over SQL?"
        ],
        "subtopics": [
          {
            "id": "db-nosql-003-01",
            "title": "Introduction to NoSQL",
            "slug": "introduction-to-nosql",
            "description": "Learn the basics of NoSQL databases and their key differences from relational databases.",
            "difficulty": "Beginner",
            "tags": ["database", "nosql", "beginner"],
            "related_questions": [
              "What defines a NoSQL database?",
              "What are the four main types of NoSQL databases?",
              "How does NoSQL support flexible schemas?"
            ]
          },
          {
            "id": "db-nosql-003-02",
            "title": "Document Databases with MongoDB",
            "slug": "document-databases-mongodb",
            "description": "Understand document-based storage and querying using MongoDBâ€™s JSON-like documents.",
            "difficulty": "Intermediate",
            "tags": ["database", "nosql", "mongodb"],
            "related_questions": [
              "How does MongoDB store data in documents?",
              "What is the role of collections in MongoDB?",
              "How do you query nested fields in MongoDB?"
            ]
          },
          {
            "id": "db-nosql-003-03",
            "title": "Key-Value Stores with Redis",
            "slug": "key-value-stores-redis",
            "description": "Explore Redis for high-performance caching and simple key-value storage.",
            "difficulty": "Intermediate",
            "tags": ["database", "nosql", "redis"],
            "related_questions": [
              "What makes Redis suitable for caching?",
              "How does Redis handle data persistence?",
              "What are some common Redis commands?"
            ]
          },
          {
            "id": "db-nosql-003-04",
            "title": "Column-Family Stores with Cassandra",
            "slug": "column-family-stores-cassandra",
            "description": "Learn about Cassandraâ€™s wide-column store for distributed, high-availability systems.",
            "difficulty": "Advanced",
            "tags": ["database", "nosql", "cassandra"],
            "related_questions": [
              "How does Cassandra achieve high availability?",
              "What is a partition key in Cassandra?",
              "How does Cassandra handle data replication?"
            ]
          },
          {
            "id": "db-nosql-003-05",
            "title": "NoSQL vs. SQL",
            "slug": "nosql-vs-sql",
            "description": "Compare NoSQL and SQL databases to choose the right tool for your application.",
            "difficulty": "Intermediate",
            "tags": ["database", "nosql", "sql"],
            "related_questions": [
              "What are the trade-offs between NoSQL and SQL?",
              "When is SQL better than NoSQL?",
              "How do NoSQL databases handle schema changes?"
            ]
          },
          {
            "id": "db-nosql-003-06",
            "title": "Amazon DynamoDB",
            "slug": "amazon-dynamodb",
            "description": "Explore DynamoDB for serverless, scalable NoSQL storage in cloud applications.",
            "difficulty": "Intermediate",
            "tags": ["database", "nosql", "dynamodb", "aws"],
            "related_questions": [
              "What is DynamoDBâ€™s pricing model?",
              "How does DynamoDB support auto-scaling?",
              "What are partition keys and sort keys in DynamoDB?"
            ]
          }
        ]
      },
      {
        "id": "db-graph-004",
        "title": "Graph Databases",
        "slug": "graph-databases",
        "description": "Master graph databases for modeling and querying complex relationships in social networks, recommendation systems, and more.",
        "difficulty": "Intermediate",
        "tags": ["database", "graph", "neo4j", "cypher"],
        "related_questions": [
          "What makes graph databases unique?",
          "How do graph databases improve relationship queries?",
          "What are some real-world applications of graph databases?",
          "How does a graph database differ from a relational database?"
        ],
        "subtopics": [
          {
            "id": "db-graph-004-01",
            "title": "Introduction to Graph Databases",
            "slug": "introduction-to-graph-databases",
            "description": "Learn how graph databases use nodes and edges to represent and query data relationships.",
            "difficulty": "Beginner",
            "tags": ["database", "graph", "beginner"],
            "related_questions": [
              "What are nodes and edges in a graph database?",
              "How does a graph database store relationships?",
              "What is a traversal in graph databases?"
            ]
          },
          {
            "id": "db-graph-004-02",
            "title": "Neo4j and Cypher",
            "slug": "neo4j-and-cypher",
            "description": "Explore Neo4j and its Cypher query language for efficient graph data querying.",
            "difficulty": "Intermediate",
            "tags": ["database", "graph", "neo4j", "cypher"],
            "related_questions": [
              "What is the syntax of a basic Cypher query?",
              "How does Cypher handle pattern matching?",
              "What are some common Cypher clauses?"
            ]
          },
          {
            "id": "db-graph-004-03",
            "title": "Graph Database Use Cases",
            "slug": "graph-database-use-cases",
            "description": "Discover applications like fraud detection, recommendation engines, and network analysis.",
            "difficulty": "Intermediate",
            "tags": ["database", "graph", "use-cases"],
            "related_questions": [
              "How do graph databases support recommendation systems?",
              "What role do graph databases play in fraud detection?",
              "How are graph databases used in social networks?"
            ]
          },
          {
            "id": "db-graph-004-04",
            "title": "Graph Query Optimization",
            "slug": "graph-query-optimization",
            "description": "Optimize Cypher queries and indexing for performance in graph databases.",
            "difficulty": "Advanced",
            "tags": ["database", "graph", "performance"],
            "related_questions": [
              "How do you optimize a Cypher query?",
              "What is the role of indexes in graph databases?",
              "How does Neo4j handle large-scale graphs?"
            ]
          },
          {
            "id": "db-graph-004-05",
            "title": "Graph Data Modeling",
            "slug": "graph-data-modeling",
            "description": "Design effective graph schemas for complex relationships and queries.",
            "difficulty": "Intermediate",
            "tags": ["database", "graph", "data-modeling"],
            "related_questions": [
              "How do you model relationships in a graph database?",
              "What are the best practices for graph schema design?",
              "How do you handle dynamic relationships in graphs?"
            ]
          },
          {
            "id": "db-graph-004-06",
            "title": "Graph Algorithms",
            "slug": "graph-algorithms",
            "description": "Apply graph algorithms like PageRank and shortest path for advanced analytics.",
            "difficulty": "Advanced",
            "tags": ["database", "graph", "algorithms"],
            "related_questions": [
              "What is the PageRank algorithm in graph databases?",
              "How do you find the shortest path in Neo4j?",
              "What are community detection algorithms?"
            ]
          }
        ]
      },
      {
        "id": "db-time-series-005",
        "title": "Time-Series Databases",
        "slug": "time-series-databases",
        "description": "Learn about time-series databases for managing temporal data in IoT, financial analytics, and monitoring systems.",
        "difficulty": "Intermediate",
        "tags": ["database", "time-series", "influxdb", "timescaledb"],
        "related_questions": [
          "What defines a time-series database?",
          "How do time-series databases optimize temporal data?",
          "What are common use cases for time-series databases?",
          "How do time-series databases differ from relational databases?"
        ],
        "subtopics": [
          {
            "id": "db-time-series-005-01",
            "title": "Introduction to Time-Series Databases",
            "slug": "introduction-to-time-series-databases",
            "description": "Understand the structure and use cases of time-series databases for sequential data.",
            "difficulty": "Beginner",
            "tags": ["database", "time-series", "beginner"],
            "related_questions": [
              "What is time-series data?",
              "Why are time-series databases optimized for temporal data?",
              "What industries rely on time-series databases?"
            ]
          },
          {
            "id": "db-time-series-005-02",
            "title": "InfluxDB for Time-Series",
            "slug": "influxdb-for-time-series",
            "description": "Learn how InfluxDB handles time-series data storage and querying.",
            "difficulty": "Intermediate",
            "tags": ["database", "time-series", "influxdb"],
            "related_questions": [
              "What is the structure of InfluxDBâ€™s data model?",
              "How do you query time-series data in InfluxDB?",
              "What are InfluxDBâ€™s retention policies?"
            ]
          },
          {
            "id": "db-time-series-005-03",
            "title": "TimescaleDB with PostgreSQL",
            "slug": "timescaledb-with-postgresql",
            "description": "Explore TimescaleDB as a time-series extension for PostgreSQL.",
            "difficulty": "Intermediate",
            "tags": ["database", "time-series", "timescaledb", "postgresql"],
            "related_questions": [
              "How does TimescaleDB integrate with PostgreSQL?",
              "What are hypertables in TimescaleDB?",
              "How does TimescaleDB optimize time-series queries?"
            ]
          },
          {
            "id": "db-time-series-005-04",
            "title": "Time-Series Data Modeling",
            "slug": "time-series-data-modeling",
            "description": "Design efficient schemas for time-series data storage and retrieval.",
            "difficulty": "Intermediate",
            "tags": ["database", "time-series", "data-modeling"],
            "related_questions": [
              "What are the key components of a time-series schema?",
              "How do you handle high-frequency time-series data?",
              "What is downsampling in time-series databases?"
            ]
          },
          {
            "id": "db-time-series-005-05",
            "title": "Scaling Time-Series Databases",
            "slug": "scaling-time-series-databases",
            "description": "Learn strategies for scaling time-series databases to handle large datasets.",
            "difficulty": "Advanced",
            "tags": ["database", "time-series", "scaling"],
            "related_questions": [
              "How do you scale InfluxDB for high write loads?",
              "What is sharding in time-series databases?",
              "How does compression improve time-series storage?"
            ]
          },
          {
            "id": "db-time-series-005-06",
            "title": "Time-Series Analytics",
            "slug": "time-series-analytics",
            "description": "Perform analytics on time-series data for trends and predictions.",
            "difficulty": "Advanced",
            "tags": ["database", "time-series", "analytics"],
            "related_questions": [
              "How do you calculate moving averages in time-series data?",
              "What is anomaly detection in time-series analytics?",
              "How do time-series databases support forecasting?"
            ]
          }
        ]
      },
      {
        "id": "db-pagination-006",
        "title": "Database Pagination",
        "slug": "database-pagination",
        "description": "Master pagination techniques for efficient data retrieval, from offset to cursor-based methods in SQL and NoSQL databases.",
        "difficulty": "Intermediate",
        "tags": ["database", "pagination", "sql", "nosql"],
        "related_questions": [
          "Why is pagination important for large datasets?",
          "What are the drawbacks of offset-based pagination?",
          "How does cursor-based pagination improve performance?",
          "What role does pagination play in REST APIs?"
        ],
        "subtopics": [
          {
            "id": "db-pagination-006-01",
            "title": "Introduction to Database Pagination",
            "slug": "introduction-to-database-pagination",
            "description": "Understand the need for pagination to improve performance and user experience with large datasets.",
            "difficulty": "Beginner",
            "tags": ["database", "pagination", "beginner"],
            "related_questions": [
              "What is database pagination?",
              "How does pagination enhance user experience?",
              "What are common pagination challenges?"
            ]
          },
          {
            "id": "db-pagination-006-02",
            "title": "Offset-Based Pagination",
            "slug": "offset-based-pagination",
            "description": "Implement offset-based pagination using LIMIT and OFFSET in SQL databases.",
            "difficulty": "Beginner",
            "tags": ["database", "pagination", "sql", "offset"],
            "related_questions": [
              "How does LIMIT and OFFSET work in SQL?",
              "What are the performance issues with offset pagination?",
              "When is offset pagination suitable?"
            ]
          },
          {
            "id": "db-pagination-006-03",
            "title": "Cursor-Based Pagination",
            "slug": "cursor-based-pagination",
            "description": "Use cursor-based pagination for scalable and efficient data retrieval in large datasets.",
            "difficulty": "Intermediate",
            "tags": ["database", "pagination", "cursor"],
            "related_questions": [
              "What is a cursor in database pagination?",
              "How does cursor pagination differ from offset?",
              "What are the benefits of cursor-based pagination?"
            ]
          },
          {
            "id": "db-pagination-006-04",
            "title": "Keyset Pagination",
            "slug": "keyset-pagination",
            "description": "Explore keyset pagination for high-performance querying in large, sorted datasets.",
            "difficulty": "Advanced",
            "tags": ["database", "pagination", "keyset"],
            "related_questions": [
              "How does keyset pagination work?",
              "What makes keyset pagination faster than offset?",
              "What are the limitations of keyset pagination?"
            ]
          },
          {
            "id": "db-pagination-006-05",
            "title": "Pagination in REST APIs",
            "slug": "pagination-in-rest-apis",
            "description": "Design paginated JSON responses for REST APIs with links and metadata.",
            "difficulty": "Intermediate",
            "tags": ["database", "pagination", "api", "json"],
            "related_questions": [
              "How do you include pagination metadata in API responses?",
              "What are next and previous links in REST pagination?",
              "How do you handle pagination in NoSQL APIs?"
            ]
          },
          {
            "id": "db-pagination-006-06",
            "title": "Pagination Performance Optimization",
            "slug": "pagination-performance-optimization",
            "description": "Optimize pagination queries for large-scale and dynamic datasets.",
            "difficulty": "Advanced",
            "tags": ["database", "pagination", "performance"],
            "related_questions": [
              "How do indexes improve pagination performance?",
              "What is the impact of sorting on pagination?",
              "How do you handle pagination with dynamic data?"
            ]
          },
          {
            "id": "db-pagination-006-07",
            "title": "Pagination in NoSQL Databases",
            "slug": "pagination-in-nosql-databases",
            "description": "Implement pagination in NoSQL databases like MongoDB and DynamoDB.",
            "difficulty": "Intermediate",
            "tags": ["database", "pagination", "nosql", "mongodb", "dynamodb"],
            "related_questions": [
              "How does pagination work in MongoDB?",
              "What is the skip method in NoSQL pagination?",
              "How does DynamoDB handle paginated queries?"
            ]
          }
        ]
      },
      {
        "id": "db-design-007",
        "title": "Database Design",
        "slug": "database-design",
        "description": "Learn to design efficient, scalable database schemas for relational and NoSQL systems to support diverse applications.",
        "difficulty": "Intermediate",
        "tags": ["database", "design", "sql", "nosql", "schema"],
        "related_questions": [
          "What are the key principles of database design?",
          "How does schema design differ between SQL and NoSQL?",
          "Why is normalization important in relational databases?",
          "What is the role of indexing in database design?"
        ],
        "subtopics": [
          {
            "id": "db-design-007-01",
            "title": "Schema Design Basics",
            "slug": "schema-design-basics",
            "description": "Understand the foundational principles of designing effective database schemas.",
            "difficulty": "Beginner",
            "tags": ["database", "design", "beginner", "schema"],
            "related_questions": [
              "What is a database schema?",
              "How do you identify entities in schema design?",
              "What are the steps in schema design?"
            ]
          },
          {
            "id": "db-design-007-02",
            "title": "Entity-Relationship Modeling",
            "slug": "entity-relationship-modeling",
            "description": "Create ER diagrams to model relationships between entities in a database.",
            "difficulty": "Beginner",
            "tags": ["database", "design", "er-diagram"],
            "related_questions": [
              "What is an ER diagram?",
              "How do you represent relationships in an ER diagram?",
              "What are cardinalities in ER modeling?"
            ]
          },
          {
            "id": "db-design-007-03",
            "title": "Indexing Strategies",
            "slug": "indexing-strategies",
            "description": "Optimize query performance with effective indexing strategies for relational and NoSQL databases.",
            "difficulty": "Intermediate",
            "tags": ["database", "design", "indexing"],
            "related_questions": [
              "What is a database index?",
              "How do you choose columns for indexing?",
              "What are the trade-offs of over-indexing?"
            ]
          },
          {
            "id": "db-design-007-04",
            "title": "Denormalization Techniques",
            "slug": "denormalization-techniques",
            "description": "Use denormalization to improve read performance in NoSQL and relational databases.",
            "difficulty": "Intermediate",
            "tags": ["database", "design", "denormalization"],
            "related_questions": [
              "What is denormalization?",
              "When should you denormalize a database?",
              "How does denormalization affect write performance?"
            ]
          },
          {
            "id": "db-design-007-05",
            "title": "Distributed Database Design",
            "slug": "distributed-database-design",
            "description": "Design schemas for distributed databases to support scalability and fault tolerance.",
            "difficulty": "Advanced",
            "tags": ["database", "design", "distributed"],
            "related_questions": [
              "What is sharding in distributed databases?",
              "How do you handle data partitioning?",
              "What are the challenges of distributed schema design?"
            ]
          },
          {
            "id": "db-design-007-06",
            "title": "Data Integrity Constraints",
            "slug": "data-integrity-constraints",
            "description": "Implement constraints like unique keys and foreign keys to ensure data integrity.",
            "difficulty": "Intermediate",
            "tags": ["database", "design", "integrity"],
            "related_questions": [
              "What are primary key constraints?",
              "How do foreign keys enforce relationships?",
              "What is a check constraint?"
            ]
          }
        ]
      },
      {
        "id": "db-administration-008",
        "title": "Database Administration",
        "slug": "database-administration",
        "description": "Learn the responsibilities of a database administrator, including backup, recovery, security, and performance tuning.",
        "difficulty": "Intermediate",
        "tags": ["database", "administration", "dba", "sql", "nosql"],
        "related_questions": [
          "What are the core responsibilities of a DBA?",
          "How does a DBA ensure database availability?",
          "What tools do DBAs use for monitoring?",
          "Why is database security critical?"
        ],
        "subtopics": [
          {
            "id": "db-administration-008-01",
            "title": "Role of a Database Administrator",
            "slug": "role-of-a-database-administrator",
            "description": "Understand the key responsibilities of a DBA in managing and optimizing databases.",
            "difficulty": "Beginner",
            "tags": ["database", "administration", "dba"],
            "related_questions": [
              "What does a DBA do daily?",
              "How does a DBA interact with developers?",
              "What skills are essential for a DBA?"
            ]
          },
          {
            "id": "db-administration-008-02",
            "title": "Backup and Recovery",
            "slug": "backup-and-recovery",
            "description": "Implement backup strategies and recovery plans to protect against data loss.",
            "difficulty": "Intermediate",
            "tags": ["database", "administration", "backup"],
            "related_questions": [
              "What is the difference between full and incremental backups?",
              "How do you test a backup strategy?",
              "What is point-in-time recovery?"
            ]
          },
          {
            "id": "db-administration-008-03",
            "title": "Performance Tuning",
            "slug": "performance-tuning",
            "description": "Optimize database performance through query tuning and server configuration.",
            "difficulty": "Intermediate",
            "tags": ["database", "administration", "performance"],
            "related_questions": [
              "How do you identify slow queries?",
              "What is query execution plan analysis?",
              "How does caching improve performance?"
            ]
          },
          {
            "id": "db-administration-008-04",
            "title": "Database Security",
            "slug": "database-security",
            "description": "Implement encryption, access controls, and auditing to secure databases.",
            "difficulty": "Intermediate",
            "tags": ["database", "administration", "security"],
            "related_questions": [
              "What is role-based access control (RBAC)?",
              "How do you encrypt sensitive data in a database?",
              "What is SQL injection and how do you prevent it?"
            ]
          },
          {
            "id": "db-administration-008-05",
            "title": "High Availability and Replication",
            "slug": "high-availability-and-replication",
            "description": "Set up replication and failover mechanisms for high-availability databases.",
            "difficulty": "Advanced",
            "tags": ["database", "administration", "replication"],
            "related_questions": [
              "What is master-slave replication?",
              "How does failover work in high-availability systems?",
              "What are the challenges of multi-master replication?"
            ]
          },
          {
            "id": "db-administration-008-06",
            "title": "Database Monitoring",
            "slug": "database-monitoring",
            "description": "Use monitoring tools to track database performance and detect issues.",
            "difficulty": "Intermediate",
            "tags": ["database", "administration", "monitoring"],
            "related_questions": [
              "What metrics should a DBA monitor?",
              "How do you set up alerts for database issues?",
              "What tools are used for database monitoring?"
            ]
          }
        ]
      },
      {
        "id": "db-json-009",
        "title": "JSON in Databases",
        "slug": "json-in-databases",
        "description": "Learn how to store, query, and manage JSON data in both relational and NoSQL databases for flexible data handling.",
        "difficulty": "Intermediate",
        "tags": ["database", "json", "sql", "nosql", "postgresql", "mongodb"],
        "related_questions": [
          "Why is JSON useful in databases?",
          "How do relational databases handle JSON data?",
          "What are the advantages of JSON in NoSQL databases?",
          "How do you query JSON fields efficiently?"
        ],
        "subtopics": [
          {
            "id": "db-json-009-01",
            "title": "Introduction to JSON in Databases",
            "slug": "introduction-to-json-in-databases",
            "description": "Understand JSON as a flexible data format for structured and semi-structured data in databases.",
            "difficulty": "Beginner",
            "tags": ["database", "json", "beginner"],
            "related_questions": [
              "What is JSON and how is it stored in databases?",
              "What are the benefits of using JSON in databases?",
              "How does JSON differ from traditional table data?"
            ]
          },
          {
            "id": "db-json-009-02",
            "title": "JSON in Relational Databases",
            "slug": "json-in-relational-databases",
            "description": "Use JSON data types in PostgreSQL and SQL Server for flexible storage.",
            "difficulty": "Intermediate",
            "tags": ["database", "json", "sql", "postgresql"],
            "related_questions": [
              "How does PostgreSQLâ€™s JSONB differ from JSON?",
              "What are JSON operators in SQL Server?",
              "How do you index JSON fields in relational databases?"
            ]
          },
          {
            "id": "db-json-009-03",
            "title": "JSON in NoSQL Databases",
            "slug": "json-in-nosql-databases",
            "description": "Work with JSON documents in MongoDB and Couchbase for schema-less storage.",
            "difficulty": "Intermediate",
            "tags": ["database", "json", "nosql", "mongodb"],
            "related_questions": [
              "How does MongoDB store JSON documents?",
              "What is the role of BSON in MongoDB?",
              "How do you query JSON in Couchbase?"
            ]
          },
          {
            "id": "db-json-009-04",
            "title": "Querying JSON Data",
            "slug": "querying-json-data",
            "description": "Write queries to extract, filter, and manipulate JSON data in databases.",
            "difficulty": "Intermediate",
            "tags": ["database", "json", "query"],
            "related_questions": [
              "How do you query nested JSON fields?",
              "What is the JSON path language?",
              "How do you optimize JSON queries?"
            ]
          },
          {
            "id": "db-json-009-05",
            "title": "JSON Data Modeling",
            "slug": "json-data-modeling",
            "description": "Design efficient JSON schemas for optimal storage and querying.",
            "difficulty": "Advanced",
            "tags": ["database", "json", "data-modeling"],
            "related_questions": [
              "How do you structure JSON data for performance?",
              "What are the trade-offs of deeply nested JSON?",
              "How do you validate JSON schemas in databases?"
            ]
          },
          {
            "id": "db-json-009-06",
            "title": "JSON Performance Optimization",
            "slug": "json-performance-optimization",
            "description": "Optimize JSON storage and queries for large-scale applications.",
            "difficulty": "Advanced",
            "tags": ["database", "json", "performance"],
            "related_questions": [
              "How do indexes improve JSON query performance?",
              "What is the impact of JSON size on database performance?",
              "How do you handle JSON updates efficiently?"
            ]
          }
        ]
      },
      {
        "id": "db-in-memory-010",
        "title": "In-Memory Databases",
        "slug": "in-memory-databases",
        "description": "Explore in-memory databases for ultra-fast data access in real-time applications like gaming and analytics.",
        "difficulty": "Intermediate",
        "tags": ["database", "in-memory", "redis", "sqlite"],
        "related_questions": [
          "What is an in-memory database?",
          "How do in-memory databases achieve low latency?",
          "What are the limitations of in-memory databases?",
          "When should you use an in-memory database?"
        ],
        "subtopics": [
          {
            "id": "db-in-memory-010-01",
            "title": "Introduction to In-Memory Databases",
            "slug": "introduction-to-in-memory-databases",
            "description": "Understand the basics of in-memory databases and their use cases for high-speed data access.",
            "difficulty": "Beginner",
            "tags": ["database", "in-memory", "beginner"],
            "related_questions": [
              "What defines an in-memory database?",
              "How does in-memory storage differ from disk-based?",
              "What are common applications of in-memory databases?"
            ]
          },
          {
            "id": "db-in-memory-010-02",
            "title": "Redis as an In-Memory Database",
            "slug": "redis-as-in-memory-database",
            "description": "Use Redis for in-memory storage, caching, and real-time analytics.",
            "difficulty": "Intermediate",
            "tags": ["database", "in-memory", "redis"],
            "related_questions": [
              "How does Redis handle in-memory data structures?",
              "What is Redis persistence?",
              "How do you scale Redis for in-memory storage?"
            ]
          },
          {
            "id": "db-in-memory-010-03",
            "title": "SQLite In-Memory Mode",
            "slug": "sqlite-in-memory-mode",
            "description": "Explore SQLiteâ€™s in-memory mode for lightweight, embedded applications.",
            "difficulty": "Intermediate",
            "tags": ["database", "in-memory", "sqlite"],
            "related_questions": [
              "How do you enable SQLiteâ€™s in-memory mode?",
              "What are the use cases for SQLite in-memory?",
              "How does SQLite compare to Redis for in-memory storage?"
            ]
          },
          {
            "id": "db-in-memory-010-04",
            "title": "In-Memory Database Performance",
            "slug": "in-memory-database-performance",
            "description": "Optimize in-memory databases for low latency and high throughput.",
            "difficulty": "Advanced",
            "tags": ["database", "in-memory", "performance"],
            "related_questions": [
              "How do you optimize Redis for performance?",
              "What is the impact of memory allocation in in-memory databases?",
              "How do you handle large datasets in in-memory databases?"
            ]
          },
          {
            "id": "db-in-memory-010-05",
            "title": "In-Memory Data Persistence",
            "slug": "in-memory-data-persistence",
            "description": "Implement persistence strategies to prevent data loss in in-memory databases.",
            "difficulty": "Intermediate",
            "tags": ["database", "in-memory", "persistence"],
            "related_questions": [
              "How does Redis implement persistence?",
              "What is snapshotting in in-memory databases?",
              "How do you balance persistence and performance?"
            ]
          },
          {
            "id": "db-in-memory-010-06",
            "title": "Use Cases for In-Memory Databases",
            "slug": "use-cases-for-in-memory-databases",
            "description": "Explore applications like real-time analytics, session stores, and leaderboards.",
            "difficulty": "Intermediate",
            "tags": ["database", "in-memory", "use-cases"],
            "related_questions": [
              "How are in-memory databases used in gaming?",
              "What role do in-memory databases play in real-time analytics?",
              "How do session stores benefit from in-memory databases?"
            ]
          }
        ]
      },
      {
        "id": "db-cloud-011",
        "title": "Cloud Databases",
        "slug": "cloud-databases",
        "description": "Learn about cloud-native databases for scalability, managed services, and global distribution in AWS, Azure, and GCP.",
        "difficulty": "Intermediate",
        "tags": ["database", "cloud", "aws", "azure", "gcp", "dynamodb", "cosmosdb"],
        "related_questions": [
          "What is a cloud-native database?",
          "How do cloud databases simplify management?",
          "What are the benefits of serverless databases?",
          "How do cloud databases handle global distribution?"
        ],
        "subtopics": [
          {
            "id": "db-cloud-011-01",
            "title": "Introduction to Cloud Databases",
            "slug": "introduction-to-cloud-databases",
            "description": "Understand the basics of cloud databases and their advantages in modern applications.",
            "difficulty": "Beginner",
            "tags": ["database", "cloud", "beginner"],
            "related_questions": [
              "What defines a cloud database?",
              "How do cloud databases differ from on-premises?",
              "What are managed database services?"
            ]
          },
          {
            "id": "db-cloud-011-02",
            "title": "AWS RDS and Aurora",
            "slug": "aws-rds-and-aurora",
            "description": "Explore AWS RDS and Aurora for managed relational databases in the cloud.",
            "difficulty": "Intermediate",
            "tags": ["database", "cloud", "aws", "rds", "aurora"],
            "related_questions": [
              "What is the difference between RDS and Aurora?",
              "How does Aurora improve performance?",
              "How do you set up an RDS instance?"
            ]
          },
          {
            "id": "db-cloud-011-03",
            "title": "Azure Cosmos DB",
            "slug": "azure-cosmos-db",
            "description": "Learn about Azure Cosmos DB for globally distributed NoSQL databases.",
            "difficulty": "Intermediate",
            "tags": ["database", "cloud", "azure", "cosmosdb"],
            "related_questions": [
              "What is multi-model support in Cosmos DB?",
              "How does Cosmos DB ensure low latency?",
              "What are partitioning strategies in Cosmos DB?"
            ]
          },
          {
            "id": "db-cloud-011-04",
            "title": "Google Cloud Spanner",
            "slug": "google-cloud-spanner",
            "description": "Explore Google Cloud Spanner for scalable, strongly consistent relational databases.",
            "difficulty": "Advanced",
            "tags": ["database", "cloud", "gcp", "spanner"],
            "related_questions": [
              "What is Spannerâ€™s TrueTime architecture?",
              "How does Spanner achieve strong consistency?",
              "What are the use cases for Cloud Spanner?"
            ]
          },
          {
            "id": "db-cloud-011-05",
            "title": "Serverless Databases",
            "slug": "serverless-databases",
            "description": "Use serverless databases like AWS DynamoDB and Aurora Serverless for auto-scaling.",
            "difficulty": "Intermediate",
            "tags": ["database", "cloud", "serverless", "dynamodb"],
            "related_questions": [
              "What is a serverless database?",
              "How does Aurora Serverless handle scaling?",
              "What are the cost benefits of serverless databases?"
            ]
          },
          {
            "id": "db-cloud-011-06",
            "title": "Cloud Database Security",
            "slug": "cloud-database-security",
            "description": "Implement security measures like encryption and IAM in cloud databases.",
            "difficulty": "Intermediate",
            "tags": ["database", "cloud", "security"],
            "related_questions": [
              "How do you secure data in AWS RDS?",
              "What is IAM in cloud databases?",
              "How do you enable encryption in Cosmos DB?"
            ]
          }
        ]
      },
      {
        "id": "db-testing-012",
        "title": "Database Testing and Migration",
        "slug": "database-testing-and-migration",
        "description": "Learn how to test database performance and migrate data between systems with minimal downtime.",
        "difficulty": "Intermediate",
        "tags": ["database", "testing", "migration", "sql", "nosql"],
        "related_questions": [
          "Why is database testing important?",
          "What are the challenges of database migration?",
          "How do you ensure data integrity during migration?",
          "What tools are used for database testing?"
        ],
        "subtopics": [
          {
            "id": "db-testing-012-01",
            "title": "Introduction to Database Testing",
            "slug": "introduction-to-database-testing",
            "description": "Understand the importance of testing database performance, integrity, and security.",
            "difficulty": "Beginner",
            "tags": ["database", "testing", "beginner"],
            "related_questions": [
              "What is database testing?",
              "What types of tests are performed on databases?",
              "Why is data validation important in testing?"
            ]
          },
          {
            "id": "db-testing-012-02",
            "title": "Unit Testing Databases",
            "slug": "unit-testing-databases",
            "description": "Write unit tests for database queries and stored procedures.",
            "difficulty": "Intermediate",
            "tags": ["database", "testing", "unit-testing"],
            "related_questions": [
              "How do you unit test a SQL query?",
              "What tools are used for database unit testing?",
              "How do you mock database data for tests?"
            ]
          },
          {
            "id": "db-testing-012-03",
            "title": "Performance Testing",
            "slug": "performance-testing",
            "description": "Test database performance under load and optimize slow queries.",
            "difficulty": "Intermediate",
            "tags": ["database", "testing", "performance"],
            "related_questions": [
              "What is load testing for databases?",
              "How do you identify bottlenecks in database performance?",
              "What is stress testing in databases?"
            ]
          },
          {
            "id": "db-testing-012-04",
            "title": "Database Migration Strategies",
            "slug": "database-migration-strategies",
            "description": "Learn strategies for migrating databases between platforms or versions.",
            "difficulty": "Intermediate",
            "tags": ["database", "migration"],
            "related_questions": [
              "What is zero-downtime migration?",
              "How do you migrate from SQL to NoSQL?",
              "What are schema migration tools?"
            ]
          },
          {
            "id": "db-testing-012-05",
            "title": "Data Migration Tools",
            "slug": "data-migration-tools",
            "description": "Use tools like Flyway and Liquibase for automated database migrations.",
            "difficulty": "Intermediate",
            "tags": ["database", "migration", "flyway", "liquibase"],
            "related_questions": [
              "What is Flyway and how does it work?",
              "How does Liquibase manage schema changes?",
              "What are the benefits of automated migration tools?"
            ]
          },
          {
            "id": "db-testing-012-06",
            "title": "Testing Data Integrity",
            "slug": "testing-data-integrity",
            "description": "Ensure data integrity during migrations and updates using validation techniques.",
            "difficulty": "Intermediate",
            "tags": ["database", "testing", "integrity"],
            "related_questions": [
              "How do you validate data after migration?",
              "What are checksums in data integrity testing?",
              "How do you handle data corruption during migration?"
            ]
          }
        ]
      },
      {
        "id": "db-big-data-013",
        "title": "Big Data Integration",
        "slug": "big-data-integration",
        "description": "Explore how databases integrate with big data platforms for large-scale data processing and analytics.",
        "difficulty": "Advanced",
        "tags": ["database", "big-data", "hadoop", "spark", "etl"],
        "related_questions": [
          "How do databases integrate with big data platforms?",
          "What is ETL in big data processing?",
          "How does Apache Spark work with databases?",
          "What are the challenges of big data integration?"
        ],
        "subtopics": [
          {
            "id": "db-big-data-013-01",
            "title": "Introduction to Big Data and Databases",
            "slug": "introduction-to-big-data-and-databases",
            "description": "Understand how databases support big data processing and analytics.",
            "difficulty": "Intermediate",
            "tags": ["database", "big-data", "beginner"],
            "related_questions": [
              "What is big data in the context of databases?",
              "How do databases handle large-scale data?",
              "What are the key components of big data systems?"
            ]
          },
          {
            "id": "db-big-data-013-02",
            "title": "Hadoop and HDFS",
            "slug": "hadoop-and-hdfs",
            "description": "Learn how Hadoop and HDFS integrate with databases for distributed storage.",
            "difficulty": "Advanced",
            "tags": ["database", "big-data", "hadoop", "hdfs"],
            "related_questions": [
              "What is HDFS and how does it work?",
              "How do databases connect to Hadoop?",
              "What is MapReduce in Hadoop?"
            ]
          },
          {
            "id": "db-big-data-013-03",
            "title": "Apache Spark with Databases",
            "slug": "apache-spark-with-databases",
            "description": "Use Apache Spark for fast data processing with relational and NoSQL databases.",
            "difficulty": "Advanced",
            "tags": ["database", "big-data", "spark"],
            "related_questions": [
              "How does Spark SQL interact with databases?",
              "What is a DataFrame in Spark?",
              "How do you optimize Spark queries?"
            ]
          },
          {
            "id": "db-big-data-013-04",
            "title": "ETL Processes",
            "slug": "etl-processes",
            "description": "Implement ETL (Extract, Transform, Load) pipelines for big data integration.",
            "difficulty": "Intermediate",
            "tags": ["database", "big-data", "etl"],
            "related_questions": [
              "What are the stages of an ETL pipeline?",
              "How do you handle data transformation in ETL?",
              "What tools are used for ETL processes?"
            ]
          },
          {
            "id": "db-big-data-013-05",
            "title": "Data Lakes and Databases",
            "slug": "data-lakes-and-databases",
            "description": "Integrate databases with data lakes for unified data storage and analytics.",
            "difficulty": "Advanced",
            "tags": ["database", "big-data", "data-lake"],
            "related_questions": [
              "What is a data lake?",
              "How do data lakes differ from data warehouses?",
              "How do databases query data lakes?"
            ]
          },
          {
            "id": "db-big-data-013-06",
            "title": "Big Data Performance Optimization",
            "slug": "big-data-performance-optimization",
            "description": "Optimize database and big data platform performance for large-scale analytics.",
            "difficulty": "Advanced",
            "tags": ["database", "big-data", "performance"],
            "related_questions": [
              "How do you optimize Spark jobs?",
              "What is partitioning in big data systems?",
              "How do you handle data skew in big data processing?"
            ]
          }
        ]
      }
    ]
  }