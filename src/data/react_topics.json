{
    "topics": [
      {
        "id": "core-react",
        "title": "Core React",
        "slug": "core-react",
        "description": "Master the fundamental concepts of React for building dynamic user interfaces.",
        "difficulty": "Beginner",
        "tags": ["React", "JavaScript", "Frontend", "Interview"],
        "subtopics": [
          {
            "id": "core-react-basics",
            "title": "React Basics",
            "slug": "core-react-basics",
            "description": "Understand React components, JSX, props, and state management.",
            "difficulty": "Beginner",
            "tags": ["React", "JSX", "Beginner", "Interview"],
            "related_questions": [
              "What is JSX and how does it work in React?",
              "Explain the difference between props and state in React.",
              "How do you create a functional component in React?"
            ]
          },
          {
            "id": "core-react-hooks",
            "title": "React Hooks",
            "slug": "core-react-hooks",
            "description": "Use hooks like useState, useEffect, and useContext for functional components.",
            "difficulty": "Beginner",
            "tags": ["Hooks", "React", "Beginner", "Interview"],
            "related_questions": [
              "What is the useState hook and how is it used?",
              "Explain the purpose of the useEffect hook.",
              "How does useContext simplify state management?"
            ]
          },
          {
            "id": "core-react-components",
            "title": "Components and Props",
            "slug": "core-react-components",
            "description": "Build reusable components and pass data using props.",
            "difficulty": "Beginner",
            "tags": ["Components", "Props", "React", "Beginner", "Interview"],
            "related_questions": [
              "What is a controlled component in React?",
              "How do you pass props between components?",
              "What are default props and how are they used?"
            ]
          },
          {
            "id": "core-react-state",
            "title": "State Management",
            "slug": "core-react-state",
            "description": "Manage component state using useState and useReducer.",
            "difficulty": "Beginner",
            "tags": ["State", "React", "Beginner", "Interview"],
            "related_questions": [
              "What is the difference between useState and useReducer?",
              "How do you update state immutably in React?",
              "What are the benefits of lifting state up?"
            ]
          },
          {
            "id": "core-react-events",
            "title": "Event Handling",
            "slug": "core-react-events",
            "description": "Handle user interactions like clicks and form submissions in React.",
            "difficulty": "Beginner",
            "tags": ["Events", "React", "Beginner", "Interview"],
            "related_questions": [
              "How do you handle events in React?",
              "What is event delegation in React?",
              "How do you prevent default behavior in a form submission?"
            ]
          },
          {
            "id": "core-react-jsx",
            "title": "Advanced JSX",
            "slug": "core-react-jsx",
            "description": "Explore conditional rendering, lists, and fragments in JSX.",
            "difficulty": "Intermediate",
            "tags": ["JSX", "React", "Intermediate"],
            "related_questions": [
              "How do you render a list in JSX?",
              "What are fragments and why are they used?",
              "How does conditional rendering work in React?"
            ]
          },
          {
            "id": "core-react-lifecycle",
            "title": "Component Lifecycle",
            "slug": "core-react-lifecycle",
            "description": "Understand lifecycle methods in class components and their hook equivalents.",
            "difficulty": "Intermediate",
            "tags": ["Lifecycle", "React", "Intermediate"],
            "related_questions": [
              "What are the main lifecycle methods in a class component?",
              "How does useEffect replace componentDidMount?",
              "What is the cleanup function in useEffect?"
            ]
          }
        ]
      },
      {
        "id": "advanced-react",
        "title": "Advanced React",
        "slug": "advanced-react",
        "description": "Dive into advanced React patterns and optimizations for building scalable applications.",
        "difficulty": "Intermediate",
        "tags": ["React", "Advanced", "Performance", "Interview"],
        "subtopics": [
          {
            "id": "advanced-react-context",
            "title": "Context API",
            "slug": "advanced-react-context",
            "description": "Manage global state using React's Context API.",
            "difficulty": "Intermediate",
            "tags": ["Context", "React", "Intermediate", "Interview"],
            "related_questions": [
              "What is the Context API and when should you use it?",
              "How do you create a context provider in React?",
              "What are the limitations of the Context API?"
            ]
          },
          {
            "id": "advanced-react-refs",
            "title": "Refs and DOM",
            "slug": "advanced-react-refs",
            "description": "Use refs to interact with DOM elements and manage focus.",
            "difficulty": "Intermediate",
            "tags": ["Refs", "React", "Intermediate"],
            "related_questions": [
              "What are refs in React and how are they used?",
              "How do you create a ref using useRef?",
              "What is the difference between createRef and useRef?"
            ]
          },
          {
            "id": "advanced-react-memo",
            "title": "Performance Optimization",
            "slug": "advanced-react-memo",
            "description": "Optimize rendering with memo, useMemo, and useCallback.",
            "difficulty": "Intermediate",
            "tags": ["Performance", "React", "Intermediate", "Interview"],
            "related_questions": [
              "What is React.memo and when should you use it?",
              "How does useMemo improve performance?",
              "What is the purpose of useCallback?"
            ]
          },
          {
            "id": "advanced-react-custom-hooks",
            "title": "Custom Hooks",
            "slug": "advanced-react-custom-hooks",
            "description": "Create reusable logic with custom hooks.",
            "difficulty": "Intermediate",
            "tags": ["Hooks", "React", "Intermediate", "Interview"],
            "related_questions": [
              "What is a custom hook and how do you create one?",
              "How do custom hooks promote code reuse?",
              "What are the rules for writing custom hooks?"
            ]
          },
          {
            "id": "advanced-react-portals",
            "title": "Portals",
            "slug": "advanced-react-portals",
            "description": "Render components outside the parent DOM hierarchy using portals.",
            "difficulty": "Advanced",
            "tags": ["Portals", "React", "Advanced"],
            "related_questions": [
              "What are portals in React and their use cases?",
              "How do you create a portal in React?",
              "How do portals help with modals or popups?"
            ]
          },
          {
            "id": "advanced-react-error-boundaries",
            "title": "Error Boundaries",
            "slug": "advanced-react-error-boundaries",
            "description": "Handle JavaScript errors in components using error boundaries.",
            "difficulty": "Advanced",
            "tags": ["Error Boundaries", "React", "Advanced"],
            "related_questions": [
              "What is an error boundary in React?",
              "How do you implement an error boundary?",
              "What are the limitations of error boundaries?"
            ]
          },
          {
            "id": "advanced-react-suspense",
            "title": "Suspense and Lazy Loading",
            "slug": "advanced-react-suspense",
            "description": "Use Suspense and lazy loading for code splitting and better UX.",
            "difficulty": "Advanced",
            "tags": ["Suspense", "React", "Advanced"],
            "related_questions": [
              "What is React Suspense and how does it work?",
              "How do you implement lazy loading with React.lazy?",
              "What is the role of the fallback prop in Suspense?"
            ]
          },
          {
            "id": "advanced-react-concurrent",
            "title": "Concurrent Rendering",
            "slug": "advanced-react-concurrent",
            "description": "Leverage React's concurrent rendering for improved performance.",
            "difficulty": "Advanced",
            "tags": ["Concurrent", "React", "Advanced"],
            "related_questions": [
              "What is concurrent rendering in React?",
              "How does the useTransition hook work?",
              "What are the benefits of Concurrent Mode?"
            ]
          }
        ]
      },
      {
        "id": "react-state-management",
        "title": "State Management",
        "slug": "react-state-management",
        "description": "Explore advanced state management libraries and patterns for React applications.",
        "difficulty": "Intermediate",
        "tags": ["State Management", "React", "Redux", "Interview"],
        "subtopics": [
          {
            "id": "state-management-redux",
            "title": "Redux",
            "slug": "state-management-redux",
            "description": "Manage global state with Redux and Redux Toolkit.",
            "difficulty": "Intermediate",
            "tags": ["Redux", "React", "Intermediate", "Interview"],
            "related_questions": [
              "What is Redux and how does it work with React?",
              "How do you create a slice in Redux Toolkit?",
              "What is the difference between an action and a reducer?"
            ]
          },
          {
            "id": "state-management-mobx",
            "title": "MobX",
            "slug": "state-management-mobx",
            "description": "Use MobX for reactive state management in React.",
            "difficulty": "Intermediate",
            "tags": ["MobX", "React", "Intermediate"],
            "related_questions": [
              "What is MobX and how does it differ from Redux?",
              "How do you make a class observable in MobX?",
              "What is the role of actions in MobX?"
            ]
          },
          {
            "id": "state-management-zustand",
            "title": "Zustand",
            "slug": "state-management-zustand",
            "description": "Implement lightweight state management with Zustand.",
            "difficulty": "Intermediate",
            "tags": ["Zustand", "React", "Intermediate"],
            "related_questions": [
              "What is Zustand and how is it used in React?",
              "How do you create a store in Zustand?",
              "What are the advantages of Zustand over Redux?"
            ]
          },
          {
            "id": "state-management-recoil",
            "title": "Recoil",
            "slug": "state-management-recoil",
            "description": "Manage state with Recoil for fine-grained reactivity.",
            "difficulty": "Intermediate",
            "tags": ["Recoil", "React", "Intermediate"],
            "related_questions": [
              "What is Recoil and how does it work with React?",
              "What is an atom in Recoil?",
              "How do selectors enhance state management in Recoil?"
            ]
          },
          {
            "id": "state-management-query",
            "title": "React Query",
            "slug": "state-management-query",
            "description": "Manage server-side state and caching with React Query.",
            "difficulty": "Intermediate",
            "tags": ["React Query", "React", "Intermediate", "Interview"],
            "related_questions": [
              "What is React Query and how does it simplify data fetching?",
              "How do you use the useQuery hook?",
              "What is the role of queryClient in React Query?"
            ]
          }
        ]
      },
      {
        "id": "react-routing",
        "title": "React Routing",
        "slug": "react-routing",
        "description": "Implement client-side routing for single-page applications.",
        "difficulty": "Intermediate",
        "tags": ["Routing", "React", "React Router", "Interview"],
        "subtopics": [
          {
            "id": "routing-react-router",
            "title": "React Router",
            "slug": "routing-react-router",
            "description": "Use React Router for navigation and dynamic routing.",
            "difficulty": "Intermediate",
            "tags": ["React Router", "React", "Intermediate", "Interview"],
            "related_questions": [
              "What is React Router and how does it work?",
              "How do you implement nested routes in React Router?",
              "What is the difference between BrowserRouter and HashRouter?"
            ]
          },
          {
            "id": "routing-protected-routes",
            "title": "Protected Routes",
            "slug": "routing-protected-routes",
            "description": "Secure routes with authentication checks.",
            "difficulty": "Intermediate",
            "tags": ["Routing", "React", "Intermediate"],
            "related_questions": [
              "How do you create a protected route in React Router?",
              "What is the role of the Navigate component?",
              "How do you handle redirects in protected routes?"
            ]
          },
          {
            "id": "routing-dynamic",
            "title": "Dynamic Routing",
            "slug": "routing-dynamic",
            "description": "Handle dynamic URLs and query parameters.",
            "difficulty": "Intermediate",
            "tags": ["Routing", "React", "Intermediate"],
            "related_questions": [
              "How do you access URL parameters in React Router?",
              "What are query parameters and how are they used?",
              "How do you programmatically navigate in React Router?"
            ]
          }
        ]
      },
      {
        "id": "react-testing",
        "title": "Testing in React",
        "slug": "react-testing",
        "description": "Ensure code quality with testing frameworks for React applications.",
        "difficulty": "Intermediate",
        "tags": ["Testing", "React", "Jest", "Interview"],
        "subtopics": [
          {
            "id": "testing-jest",
            "title": "Jest",
            "slug": "testing-jest",
            "description": "Write unit tests for React components using Jest.",
            "difficulty": "Beginner",
            "tags": ["Jest", "Testing", "React", "Beginner", "Interview"],
            "related_questions": [
              "What is Jest and how is it used in React testing?",
              "How do you test a React component with Jest?",
              "What is the role of snapshot testing in Jest?"
            ]
          },
          {
            "id": "testing-rtl",
            "title": "React Testing Library",
            "slug": "testing-rtl",
            "description": "Test React components with React Testing Library for user-centric testing.",
            "difficulty": "Intermediate",
            "tags": ["React Testing Library", "Testing", "React", "Intermediate", "Interview"],
            "related_questions": [
              "What is React Testing Library and how does it differ from Enzyme?",
              "How do you test user interactions with React Testing Library?",
              "What is the role of queries in React Testing Library?"
            ]
          },
          {
            "id": "testing-cypress",
            "title": "Cypress",
            "slug": "testing-cypress",
            "description": "Perform end-to-end testing with Cypress for React applications.",
            "difficulty": "Intermediate",
            "tags": ["Cypress", "Testing", "React", "Intermediate"],
            "related_questions": [
              "What is Cypress and how is it used for React testing?",
              "How do you write an end-to-end test in Cypress?",
              "What are the advantages of Cypress over Selenium?"
            ]
          },
          {
            "id": "testing-msw",
            "title": "Mock Service Worker (MSW)",
            "slug": "testing-msw",
            "description": "Mock API calls for testing with MSW.",
            "difficulty": "Intermediate",
            "tags": ["MSW", "Testing", "React", "Intermediate"],
            "related_questions": [
              "What is MSW and how does it help in testing?",
              "How do you set up MSW for a React application?",
              "What is the difference between mocking with MSW and fetch mocking?"
            ]
          }
        ]
      },
      {
        "id": "react-styling",
        "title": "Styling in React",
        "slug": "react-styling",
        "description": "Apply styles to React components using various techniques.",
        "difficulty": "Beginner",
        "tags": ["Styling", "React", "CSS", "Interview"],
        "subtopics": [
          {
            "id": "styling-css",
            "title": "CSS in React",
            "slug": "styling-css",
            "description": "Use traditional CSS and CSS modules for component styling.",
            "difficulty": "Beginner",
            "tags": ["CSS", "React", "Beginner", "Interview"],
            "related_questions": [
              "What are CSS modules and how are they used in React?",
              "How do you apply inline styles in React?",
              "What are the benefits of scoped CSS in React?"
            ]
          },
          {
            "id": "styling-tailwind",
            "title": "Tailwind CSS",
            "slug": "styling-tailwind",
            "description": "Style React components with Tailwind CSS for rapid development.",
            "difficulty": "Beginner",
            "tags": ["Tailwind", "React", "Beginner"],
            "related_questions": [
              "What is Tailwind CSS and how is it used in React?",
              "How do you configure Tailwind CSS in a React project?",
              "What are the advantages of utility-first CSS?"
            ]
          },
          {
            "id": "styling-styled-components",
            "title": "Styled Components",
            "slug": "styling-styled-components",
            "description": "Use styled-components for CSS-in-JS styling.",
            "difficulty": "Intermediate",
            "tags": ["Styled Components", "React", "Intermediate"],
            "related_questions": [
              "What are styled-components and how do they work?",
              "How do you pass props to styled-components?",
              "What is the benefit of CSS-in-JS in React?"
            ]
          },
          {
            "id": "styling-emotion",
            "title": "Emotion",
            "slug": "styling-emotion",
            "description": "Style components with Emotion for CSS-in-JS solutions.",
            "difficulty": "Intermediate",
            "tags": ["Emotion", "React", "Intermediate"],
            "related_questions": [
              "What is Emotion and how does it differ from styled-components?",
              "How do you use the css prop in Emotion?",
              "What are the performance benefits of Emotion?"
            ]
          }
        ]
      },
      {
        "id": "react-performance",
        "title": "React Performance",
        "slug": "react-performance",
        "description": "Optimize React applications for speed and efficiency.",
        "difficulty": "Intermediate",
        "tags": ["Performance", "React", "Optimization", "Interview"],
        "subtopics": [
          {
            "id": "performance-code-splitting",
            "title": "Code Splitting",
            "slug": "performance-code-splitting",
            "description": "Reduce bundle size with code splitting and lazy loading.",
            "difficulty": "Intermediate",
            "tags": ["Code Splitting", "React", "Intermediate"],
            "related_questions": [
              "What is code splitting and why is it important?",
              "How do you implement code splitting in React?",
              "What is the role of React.lazy in code splitting?"
            ]
          },
          {
            "id": "performance-memoization",
            "title": "Memoization",
            "slug": "performance-memoization",
            "description": "Use memoization techniques to prevent unnecessary renders.",
            "difficulty": "Intermediate",
            "tags": ["Memoization", "React", "Intermediate", "Interview"],
            "related_questions": [
              "How does useMemo improve performance?",
              "What is the difference between useMemo and useCallback?",
              "When should you use React.memo?"
            ]
          },
          {
            "id": "performance-rendering",
            "title": "Rendering Optimization",
            "slug": "performance-rendering",
            "description": "Optimize rendering with shouldComponentUpdate and PureComponent.",
            "difficulty": "Intermediate",
            "tags": ["Rendering", "React", "Intermediate"],
            "related_questions": [
              "What is a PureComponent and how does it work?",
              "How do you implement shouldComponentUpdate?",
              "What are the causes of unnecessary renders in React?"
            ]
          },
          {
            "id": "performance-profiler",
            "title": "React Profiler",
            "slug": "performance-profiler",
            "description": "Use the React Profiler to identify performance bottlenecks.",
            "difficulty": "Advanced",
            "tags": ["Profiler", "React", "Advanced"],
            "related_questions": [
              "What is the React Profiler and how is it used?",
              "How do you identify slow components with the Profiler?",
              "What metrics does the React Profiler provide?"
            ]
          }
        ]
      },
      {
        "id": "react-server",
        "title": "Server-Side Rendering (SSR) & Static Site Generation (SSG)",
        "slug": "react-server",
        "description": "Improve SEO and performance with SSR and SSG in React.",
        "difficulty": "Advanced",
        "tags": ["SSR", "SSG", "React", "Next.js", "Interview"],
        "subtopics": [
          {
            "id": "server-nextjs",
            "title": "Next.js",
            "slug": "server-nextjs",
            "description": "Use Next.js for SSR, SSG, and API routes.",
            "difficulty": "Advanced",
            "tags": ["Next.js", "React", "Advanced", "Interview"],
            "related_questions": [
              "What is Next.js and how does it support SSR?",
              "How do you implement SSG in Next.js?",
              "What is the difference between getStaticProps and getServerSideProps?"
            ]
          },
          {
            "id": "server-hydration",
            "title": "Hydration",
            "slug": "server-hydration",
            "description": "Understand hydration for client-side interactivity in SSR.",
            "difficulty": "Advanced",
            "tags": ["Hydration", "React", "Advanced"],
            "related_questions": [
              "What is hydration in React SSR?",
              "How does hydration work in Next.js?",
              "What are the challenges of hydration in SSR?"
            ]
          },
          {
            "id": "server-api-routes",
            "title": "API Routes",
            "slug": "server-api-routes",
            "description": "Build backend APIs with Next.js API routes.",
            "difficulty": "Advanced",
            "tags": ["API Routes", "React", "Advanced"],
            "related_questions": [
              "What are API routes in Next.js?",
              "How do you create an API route in Next.js?",
              "How do API routes differ from traditional backend APIs?"
            ]
          },
          {
            "id": "server-gatsby",
            "title": "Gatsby",
            "slug": "server-gatsby",
            "description": "Use Gatsby for SSG and building fast static sites.",
            "difficulty": "Advanced",
            "tags": ["Gatsby", "React", "Advanced"],
            "related_questions": [
              "What is Gatsby and how does it differ from Next.js?",
              "How do you create a static page in Gatsby?",
              "What is the role of GraphQL in Gatsby?"
            ]
          }
        ]
      },
      {
        "id": "react-typescript",
        "title": "React with TypeScript",
        "slug": "react-typescript",
        "description": "Enhance React applications with TypeScript for type safety.",
        "difficulty": "Intermediate",
        "tags": ["TypeScript", "React", "Type Safety", "Interview"],
        "subtopics": [
          {
            "id": "typescript-basics",
            "title": "TypeScript Basics in React",
            "slug": "typescript-basics",
            "description": "Use TypeScript for props, state, and hooks in React.",
            "difficulty": "Intermediate",
            "tags": ["TypeScript", "React", "Intermediate", "Interview"],
            "related_questions": [
              "How do you define prop types in a React component with TypeScript?",
              "What is the use of interfaces in React with TypeScript?",
              "How do you type a useState hook in TypeScript?"
            ]
          },
          {
            "id": "typescript-advanced",
            "title": "Advanced TypeScript",
            "slug": "typescript-advanced",
            "description": "Use advanced TypeScript features like generics and union types.",
            "difficulty": "Advanced",
            "tags": ["TypeScript", "React", "Advanced"],
            "related_questions": [
              "What are generics in TypeScript and how are they used in React?",
              "How do you handle union types in React components?",
              "What is the role of the 'as' keyword in TypeScript?"
            ]
          },
          {
            "id": "typescript-tooling",
            "title": "TypeScript Tooling",
            "slug": "typescript-tooling",
            "description": "Configure TypeScript in React projects with proper tooling.",
            "difficulty": "Intermediate",
            "tags": ["TypeScript", "React", "Intermediate"],
            "related_questions": [
              "How do you set up TypeScript in a Create React App project?",
              "What is the role of the tsconfig.json file?",
              "How do you handle third-party library types in TypeScript?"
            ]
          }
        ]
      },
      {
        "id": "react-api",
        "title": "API Integration",
        "slug": "react-api",
        "description": "Fetch and manage data from APIs in React applications.",
        "difficulty": "Intermediate",
        "tags": ["API", "React", "Data Fetching", "Interview"],
        "subtopics": [
          {
            "id": "api-fetch",
            "title": "Fetch API",
            "slug": "api-fetch",
            "description": "Use the Fetch API for making HTTP requests.",
            "difficulty": "Beginner",
            "tags": ["Fetch", "React", "Beginner", "Interview"],
            "related_questions": [
              "How do you make an API call using the Fetch API in React?",
              "What is the difference between Fetch and Axios?",
              "How do you handle errors in Fetch API calls?"
            ]
          },
          {
            "id": "api-axios",
            "title": "Axios",
            "slug": "api-axios",
            "description": "Use Axios for simplified HTTP requests and interceptors.",
            "difficulty": "Intermediate",
            "tags": ["Axios", "React", "Intermediate"],
            "related_questions": [
              "What is Axios and how is it used in React?",
              "How do you set up request interceptors in Axios?",
              "What are the advantages of Axios over Fetch?"
            ]
          },
          {
            "id": "api-graphql",
            "title": "GraphQL",
            "slug": "api-graphql",
            "description": "Integrate GraphQL APIs using Apollo Client or Relay.",
            "difficulty": "Advanced",
            "tags": ["GraphQL", "React", "Advanced"],
            "related_questions": [
              "What is GraphQL and how does it differ from REST?",
              "How do you set up Apollo Client in a React application?",
              "What is the role of queries and mutations in GraphQL?"
            ]
          }
        ]
      },
      {
        "id": "react-forms",
        "title": "Forms in React",
        "slug": "react-forms",
        "description": "Build and manage forms in React with validation and submission handling.",
        "difficulty": "Intermediate",
        "tags": ["Forms", "React", "Validation", "Interview"],
        "subtopics": [
          {
            "id": "forms-controlled",
            "title": "Controlled Forms",
            "slug": "forms-controlled",
            "description": "Build controlled forms with state management.",
            "difficulty": "Beginner",
            "tags": ["Forms", "React", "Beginner", "Interview"],
            "related_questions": [
              "What is a controlled form in React?",
              "How do you handle form input changes in React?",
              "What are the benefits of controlled components?"
            ]
          },
          {
            "id": "forms-uncontrolled",
            "title": "Uncontrolled Forms",
            "slug": "forms-uncontrolled",
            "description": "Use uncontrolled forms with refs for simpler form handling.",
            "difficulty": "Intermediate",
            "tags": ["Forms", "React", "Intermediate"],
            "related_questions": [
              "What is an uncontrolled form in React?",
              "How do you access form values using refs?",
              "When should you use uncontrolled forms?"
            ]
          },
          {
            "id": "forms-libraries",
            "title": "Form Libraries",
            "slug": "forms-libraries",
            "description": "Use libraries like Formik or React Hook Form for complex forms.",
            "difficulty": "Intermediate",
            "tags": ["Formik", "React Hook Form", "React", "Intermediate"],
            "related_questions": [
              "What is Formik and how does it simplify form handling?",
              "How do you use React Hook Form in a React application?",
              "What are the advantages of React Hook Form over Formik?"
            ]
          }
        ]
      },
      {
        "id": "react-animation",
        "title": "Animations in React",
        "slug": "react-animation",
        "description": "Add animations to React applications for enhanced user experience.",
        "difficulty": "Intermediate",
        "tags": ["Animations", "React", "UI", "Interview"],
        "subtopics": [
          {
            "id": "animation-css",
            "title": "CSS Animations",
            "slug": "animation-css",
            "description": "Use CSS transitions and animations in React components.",
            "difficulty": "Beginner",
            "tags": ["CSS", "Animations", "React", "Beginner"],
            "related_questions": [
              "How do you apply CSS animations in React?",
              "What is the difference between transitions and animations in CSS?",
              "How do you trigger animations on component mount?"
            ]
          },
          {
            "id": "animation-framer",
            "title": "Framer Motion",
            "slug": "animation-framer",
            "description": "Use Framer Motion for declarative animations in React.",
            "difficulty": "Intermediate",
            "tags": ["Framer Motion", "Animations", "React", "Intermediate"],
            "related_questions": [
              "What is Framer Motion and how is it used in React?",
              "How do you animate a component with Framer Motion?",
              "What are variants in Framer Motion?"
            ]
          },
          {
            "id": "animation-react-spring",
            "title": "React Spring",
            "slug": "animation-react-spring",
            "description": "Implement physics-based animations with React Spring.",
            "difficulty": "Intermediate",
            "tags": ["React Spring", "Animations", "React", "Intermediate"],
            "related_questions": [
              "What is React Spring and how does it differ from Framer Motion?",
              "How do you create a spring animation in React Spring?",
              "What are the benefits of physics-based animations?"
            ]
          }
        ]
      },
      {
        "id": "react-build-tools",
        "title": "Build Tools",
        "slug": "react-build-tools",
        "description": "Set up and manage React projects with modern build tools.",
        "difficulty": "Beginner",
        "tags": ["Build Tools", "React", "Webpack", "Interview"],
        "subtopics": [
          {
            "id": "build-tools-cra",
            "title": "Create React App",
            "slug": "build-tools-cra",
            "description": "Use Create React App for quick React project setup.",
            "difficulty": "Beginner",
            "tags": ["Create React App", "React", "Beginner", "Interview"],
            "related_questions": [
              "What is Create React App and how does it work?",
              "How do you customize the configuration in Create React App?",
              "What are the limitations of Create React App?"
            ]
          },
          {
            "id": "build-tools-vite",
            "title": "Vite",
            "slug": "build-tools-vite",
            "description": "Use Vite for fast and modern React project builds.",
            "difficulty": "Intermediate",
            "tags": ["Vite", "React", "Intermediate"],
            "related_questions": [
              "What is Vite and how does it differ from Webpack?",
              "How do you set up a React project with Vite?",
              "What are the performance benefits of Vite?"
            ]
          },
          {
            "id": "build-tools-webpack",
            "title": "Webpack",
            "slug": "build-tools-webpack",
            "description": "Configure Webpack for custom React builds.",
            "difficulty": "Advanced",
            "tags": ["Webpack", "React", "Advanced"],
            "related_questions": [
              "What is Webpack and how is it used in React projects?",
              "How do you configure Webpack for a React application?",
              "What are Webpack plugins and loaders?"
            ]
          }
        ]
      },
      {
        "id": "react-deployment",
        "title": "Deployment",
        "slug": "react-deployment",
        "description": "Deploy React applications to various platforms.",
        "difficulty": "Intermediate",
        "tags": ["Deployment", "React", "Cloud", "Interview"],
        "subtopics": [
          {
            "id": "deployment-vercel",
            "title": "Vercel",
            "slug": "deployment-vercel",
            "description": "Deploy React apps with Vercel for seamless hosting.",
            "difficulty": "Intermediate",
            "tags": ["Vercel", "React", "Intermediate"],
            "related_questions": [
              "How do you deploy a React app to Vercel?",
              "What are the benefits of using Vercel for React apps?",
              "How does Vercel handle Next.js deployments?"
            ]
          },
          {
            "id": "deployment-netlify",
            "title": "Netlify",
            "slug": "deployment-netlify",
            "description": "Use Netlify for hosting and continuous deployment of React apps.",
            "difficulty": "Intermediate",
            "tags": ["Netlify", "React", "Intermediate"],
            "related_questions": [
              "How do you deploy a React app to Netlify?",
              "What is the role of Netlify’s build plugins?",
              "How does Netlify support continuous deployment?"
            ]
          },
          {
            "id": "deployment-aws",
            "title": "AWS",
            "slug": "deployment-aws",
            "description": "Deploy React apps on AWS using S3, Amplify, or ECS.",
            "difficulty": "Advanced",
            "tags": ["AWS", "React", "Advanced"],
            "related_questions": [
              "How do you deploy a React app to AWS S3?",
              "What is AWS Amplify and how is it used for React?",
              "How do you configure a CI/CD pipeline for AWS deployments?"
            ]
          }
        ]
      },
      {
        "id": "react-security",
        "title": "Web Security in React",
        "slug": "react-security",
        "description": "Secure React applications against common vulnerabilities.",
        "difficulty": "Intermediate",
        "tags": ["Security", "React", "Web", "Interview"],
        "subtopics": [
          {
            "id": "security-xss",
            "title": "Cross-Site Scripting (XSS)",
            "slug": "security-xss",
            "description": "Prevent XSS attacks in React applications.",
            "difficulty": "Intermediate",
            "tags": ["XSS", "Security", "React", "Intermediate", "Interview"],
            "related_questions": [
              "How does React prevent XSS by default?",
              "What is dangerouslySetInnerHTML and its risks?",
              "How do you sanitize user input in a React app?"
            ]
          },
          {
            "id": "security-auth",
            "title": "Authentication & Authorization",
            "slug": "security-auth",
            "description": "Implement secure authentication with JWT, OAuth, or Firebase.",
            "difficulty": "Intermediate",
            "tags": ["Authentication", "Security", "React", "Intermediate"],
            "related_questions": [
              "How do you implement JWT authentication in a React app?",
              "What is OAuth and how is it used in React?",
              "How do you secure routes based on user roles?"
            ]
          },
          {
            "id": "security-csrf",
            "title": "Cross-Site Request Forgery (CSRF)",
            "slug": "security-csrf",
            "description": "Protect React apps from CSRF attacks.",
            "difficulty": "Advanced",
            "tags": ["CSRF", "Security", "React", "Advanced"],
            "related_questions": [
              "What is CSRF and how does it affect React apps?",
              "How do you implement CSRF tokens in a React app?",
              "What are the best practices for CSRF prevention?"
            ]
          }
        ]
      },
      {
        "id": "react-accessibility",
        "title": "Accessibility in React",
        "slug": "react-accessibility",
        "description": "Build accessible React applications for all users.",
        "difficulty": "Intermediate",
        "tags": ["Accessibility", "React", "A11y", "Interview"],
        "subtopics": [
          {
            "id": "accessibility-aria",
            "title": "ARIA Attributes",
            "slug": "accessibility-aria",
            "description": "Use ARIA attributes to enhance accessibility.",
            "difficulty": "Intermediate",
            "tags": ["ARIA", "Accessibility", "React", "Intermediate"],
            "related_questions": [
              "What are ARIA attributes and how are they used in React?",
              "How do you make a custom component accessible with ARIA?",
              "What is the role of aria-label in accessibility?"
            ]
          },
          {
            "id": "accessibility-semantic",
            "title": "Semantic HTML",
            "slug": "accessibility-semantic",
            "description": "Use semantic HTML for better accessibility.",
            "difficulty": "Beginner",
            "tags": ["Semantic HTML", "Accessibility", "React", "Beginner"],
            "related_questions": [
              "Why is semantic HTML important for accessibility?",
              "How do you use semantic elements in React?",
              "What are the benefits of using nav and main tags?"
            ]
          },
          {
            "id": "accessibility-testing",
            "title": "Accessibility Testing",
            "slug": "accessibility-testing",
            "description": "Test React apps for accessibility with tools like Lighthouse.",
            "difficulty": "Intermediate",
            "tags": ["Accessibility", "Testing", "React", "Intermediate"],
            "related_questions": [
              "How do you test accessibility in a React app?",
              "What is the role of Lighthouse in accessibility testing?",
              "How do you use axe-core for React accessibility?"
            ]
          }
        ]
      },
      {
        "id": "react-pwa",
        "title": "Progressive Web Apps (PWA)",
        "slug": "react-pwa",
        "description": "Build offline-capable React applications with PWA features.",
        "difficulty": "Advanced",
        "tags": ["PWA", "React", "Offline", "Interview"],
        "subtopics": [
          {
            "id": "pwa-service-workers",
            "title": "Service Workers",
            "slug": "pwa-service-workers",
            "description": "Use service workers for caching and offline functionality.",
            "difficulty": "Advanced",
            "tags": ["Service Workers", "React", "Advanced"],
            "related_questions": [
              "What is a service worker and how is it used in React?",
              "How do you implement caching with service workers?",
              "What are the challenges of service worker management?"
            ]
          },
          {
            "id": "pwa-manifest",
            "title": "Web App Manifest",
            "slug": "pwa-manifest",
            "description": "Configure the web app manifest for PWA features.",
            "difficulty": "Intermediate",
            "tags": ["Manifest", "React", "Intermediate"],
            "related_questions": [
              "What is the web app manifest and its purpose?",
              "How do you configure a manifest.json file for a React PWA?",
              "What are the key properties of a web app manifest?"
            ]
          }
        ]
      },
      {
        "id": "react-interview",
        "title": "React Interview Preparation",
        "slug": "react-interview",
        "description": "Strategies and tips for excelling in React technical interviews.",
        "difficulty": "Beginner",
        "tags": ["Interview", "React", "Preparation"],
        "subtopics": [
          {
            "id": "interview-coding",
            "title": "Coding Interview Strategies",
            "slug": "interview-coding",
            "description": "Approach React coding interviews with problem-solving skills.",
            "difficulty": "Beginner",
            "tags": ["Coding", "Interview", "React", "Beginner"],
            "related_questions": [
              "How do you approach a React coding problem in an interview?",
              "What is the importance of explaining your React code?",
              "How do you debug a React component during an interview?"
            ]
          },
          {
            "id": "interview-concepts",
            "title": "Conceptual Questions",
            "slug": "interview-concepts",
            "description": "Prepare for questions about React concepts and architecture.",
            "difficulty": "Intermediate",
            "tags": ["Concepts", "Interview", "React", "Intermediate"],
            "related_questions": [
              "What is the virtual DOM and how does it work in React?",
              "How does React handle reconciliation?",
              "What are the differences between class and functional components?"
            ]
          },
          {
            "id": "interview-projects",
            "title": "Discussing Projects",
            "slug": "interview-projects",
            "description": "Explain React projects and their technical challenges.",
            "difficulty": "Beginner",
            "tags": ["Projects", "Interview", "React", "Beginner"],
            "related_questions": [
              "How do you describe a React project in an interview?",
              "What challenges have you faced in a React project?",
              "How do you showcase state management in a project?"
            ]
          },
          {
            "id": "interview-system-design",
            "title": "System Design for React",
            "slug": "interview-system-design",
            "description": "Prepare for system design questions related to React applications.",
            "difficulty": "Advanced",
            "tags": ["System Design", "Interview", "React", "Advanced"],
            "related_questions": [
              "How would you design a scalable React application?",
              "What considerations are important for a React app’s architecture?",
              "How do you optimize data fetching in a large React app?"
            ]
          }
        ]
      }
    ]
  }